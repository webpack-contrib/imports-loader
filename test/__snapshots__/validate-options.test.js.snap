// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`validate options should throw an error on the "additionalCode" option with "/test/" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options.additionalCode should be a non-empty string.
   -> Adds custom code as a preamble before the module's code.
   -> Read more at https://webpack.js.org/loaders/imports-loader/#additionalcode"
`;

exports[`validate options should throw an error on the "additionalCode" option with "[""]" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options.additionalCode should be a non-empty string.
   -> Adds custom code as a preamble before the module's code.
   -> Read more at https://webpack.js.org/loaders/imports-loader/#additionalcode"
`;

exports[`validate options should throw an error on the "additionalCode" option with "[]" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options.additionalCode should be a non-empty string.
   -> Adds custom code as a preamble before the module's code.
   -> Read more at https://webpack.js.org/loaders/imports-loader/#additionalcode"
`;

exports[`validate options should throw an error on the "additionalCode" option with "{}" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options.additionalCode should be a non-empty string.
   -> Adds custom code as a preamble before the module's code.
   -> Read more at https://webpack.js.org/loaders/imports-loader/#additionalcode"
`;

exports[`validate options should throw an error on the "additionalCode" option with "false" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options.additionalCode should be a non-empty string.
   -> Adds custom code as a preamble before the module's code.
   -> Read more at https://webpack.js.org/loaders/imports-loader/#additionalcode"
`;

exports[`validate options should throw an error on the "additionalCode" option with "true" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options.additionalCode should be a non-empty string.
   -> Adds custom code as a preamble before the module's code.
   -> Read more at https://webpack.js.org/loaders/imports-loader/#additionalcode"
`;

exports[`validate options should throw an error on the "imports" option with "" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options.imports should be one of these:
   non-empty string | non-empty string | object { moduleName, syntax?, name?, alias? } | [non-empty string | object { moduleName, syntax?, name?, alias? }, ...] (should not have fewer than 1 item)
   Details:
    * options.imports should be a non-empty string.
      -> Allows to use a string to describe an import.
      -> Read more at https://webpack.js.org/loaders/imports-loader/#string
    * options.imports should be a non-empty string.
      -> Allows to use a string to describe an import.
      -> Read more at https://webpack.js.org/loaders/imports-loader/#string"
`;

exports[`validate options should throw an error on the "imports" option with "/test/" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options.imports misses the property 'moduleName'. Should be:
   non-empty string"
`;

exports[`validate options should throw an error on the "imports" option with "[""]" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options.imports[0] should be a non-empty string.
   -> Allows to use a string to describe an import.
   -> Read more at https://webpack.js.org/loaders/imports-loader/#string"
`;

exports[`validate options should throw an error on the "imports" option with "[]" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options.imports should be a non-empty array."
`;

exports[`validate options should throw an error on the "imports" option with "{"syntax":"default","moduleName":"jQuery","name":"lib","alias":"lib_alias"}" value 1`] = `
"The "default" syntax does not support "lib_alias" alias in "
{
 "syntax": "default",
 "moduleName": "jQuery",
 "name": "lib",
 "alias": "lib_alias"
}
" value"
`;

exports[`validate options should throw an error on the "imports" option with "{"type":"string","moduleName":"jQuery","list":false}" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options.imports should be one of these:
   non-empty string | non-empty string | object { moduleName, syntax?, name?, alias? } | [non-empty string | object { moduleName, syntax?, name?, alias? }, ...] (should not have fewer than 1 item)
   Details:
    * options.imports has an unknown property 'type'. These properties are valid:
      object { moduleName, syntax?, name?, alias? }
      -> Allows to use an object to describe an import.
      -> Read more at https://webpack.js.org/loaders/imports-loader/#object
    * options.imports has an unknown property 'list'. These properties are valid:
      object { moduleName, syntax?, name?, alias? }
      -> Allows to use an object to describe an import.
      -> Read more at https://webpack.js.org/loaders/imports-loader/#object"
`;

exports[`validate options should throw an error on the "imports" option with "{}" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options.imports misses the property 'moduleName'. Should be:
   non-empty string"
`;

exports[`validate options should throw an error on the "imports" option with "false" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options.imports should be one of these:
   non-empty string | non-empty string | object { moduleName, syntax?, name?, alias? } | [non-empty string | object { moduleName, syntax?, name?, alias? }, ...] (should not have fewer than 1 item)
   Details:
    * options.imports should be one of these:
      non-empty string | object { moduleName, syntax?, name?, alias? }
      Details:
       * options.imports should be a non-empty string.
         -> Allows to use a string to describe an import.
         -> Read more at https://webpack.js.org/loaders/imports-loader/#string
       * options.imports should be a non-empty string.
         -> Allows to use a string to describe an import.
         -> Read more at https://webpack.js.org/loaders/imports-loader/#string
       * options.imports should be an object:
         object { moduleName, syntax?, name?, alias? }
         -> Allows to use an object to describe an import.
         -> Read more at https://webpack.js.org/loaders/imports-loader/#object
    * options.imports should be an array:
      [non-empty string | object { moduleName, syntax?, name?, alias? }, ...] (should not have fewer than 1 item)"
`;

exports[`validate options should throw an error on the "imports" option with "true" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options.imports should be one of these:
   non-empty string | non-empty string | object { moduleName, syntax?, name?, alias? } | [non-empty string | object { moduleName, syntax?, name?, alias? }, ...] (should not have fewer than 1 item)
   Details:
    * options.imports should be one of these:
      non-empty string | object { moduleName, syntax?, name?, alias? }
      Details:
       * options.imports should be a non-empty string.
         -> Allows to use a string to describe an import.
         -> Read more at https://webpack.js.org/loaders/imports-loader/#string
       * options.imports should be a non-empty string.
         -> Allows to use a string to describe an import.
         -> Read more at https://webpack.js.org/loaders/imports-loader/#string
       * options.imports should be an object:
         object { moduleName, syntax?, name?, alias? }
         -> Allows to use an object to describe an import.
         -> Read more at https://webpack.js.org/loaders/imports-loader/#object
    * options.imports should be an array:
      [non-empty string | object { moduleName, syntax?, name?, alias? }, ...] (should not have fewer than 1 item)"
`;

exports[`validate options should throw an error on the "type" option with "" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options.type should be one of these:
   "module" | "commonjs"
   -> Format of generated exports.
   -> Read more at https://github.com/webpack-contrib/imports-loader#type"
`;

exports[`validate options should throw an error on the "type" option with "[]" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options.type should be one of these:
   "module" | "commonjs"
   -> Format of generated exports.
   -> Read more at https://github.com/webpack-contrib/imports-loader#type"
`;

exports[`validate options should throw an error on the "type" option with "{}" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options.type should be one of these:
   "module" | "commonjs"
   -> Format of generated exports.
   -> Read more at https://github.com/webpack-contrib/imports-loader#type"
`;

exports[`validate options should throw an error on the "type" option with "string" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options.type should be one of these:
   "module" | "commonjs"
   -> Format of generated exports.
   -> Read more at https://github.com/webpack-contrib/imports-loader#type"
`;

exports[`validate options should throw an error on the "unknown" option with "/test/" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options should be one of these:
   object { imports, … } | object { wrapper, … } | object { additionalCode, … }
   -> Options for imports-loader
   Details:
    * options has an unknown property 'unknown'. These properties are valid:
      object { imports, … } | object { wrapper, … } | object { additionalCode, … }
      -> Options for imports-loader
    * options misses the property 'imports' | should be any non-object.
    * options misses the property 'wrapper' | should be any non-object.
    * options misses the property 'additionalCode' | should be any non-object."
`;

exports[`validate options should throw an error on the "unknown" option with "[]" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options should be one of these:
   object { imports, … } | object { wrapper, … } | object { additionalCode, … }
   -> Options for imports-loader
   Details:
    * options has an unknown property 'unknown'. These properties are valid:
      object { imports, … } | object { wrapper, … } | object { additionalCode, … }
      -> Options for imports-loader
    * options misses the property 'imports' | should be any non-object.
    * options misses the property 'wrapper' | should be any non-object.
    * options misses the property 'additionalCode' | should be any non-object."
`;

exports[`validate options should throw an error on the "unknown" option with "{"foo":"bar"}" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options should be one of these:
   object { imports, … } | object { wrapper, … } | object { additionalCode, … }
   -> Options for imports-loader
   Details:
    * options has an unknown property 'unknown'. These properties are valid:
      object { imports, … } | object { wrapper, … } | object { additionalCode, … }
      -> Options for imports-loader
    * options misses the property 'imports' | should be any non-object.
    * options misses the property 'wrapper' | should be any non-object.
    * options misses the property 'additionalCode' | should be any non-object."
`;

exports[`validate options should throw an error on the "unknown" option with "{}" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options should be one of these:
   object { imports, … } | object { wrapper, … } | object { additionalCode, … }
   -> Options for imports-loader
   Details:
    * options has an unknown property 'unknown'. These properties are valid:
      object { imports, … } | object { wrapper, … } | object { additionalCode, … }
      -> Options for imports-loader
    * options misses the property 'imports' | should be any non-object.
    * options misses the property 'wrapper' | should be any non-object.
    * options misses the property 'additionalCode' | should be any non-object."
`;

exports[`validate options should throw an error on the "unknown" option with "1" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options should be one of these:
   object { imports, … } | object { wrapper, … } | object { additionalCode, … }
   -> Options for imports-loader
   Details:
    * options has an unknown property 'unknown'. These properties are valid:
      object { imports, … } | object { wrapper, … } | object { additionalCode, … }
      -> Options for imports-loader
    * options misses the property 'imports' | should be any non-object.
    * options misses the property 'wrapper' | should be any non-object.
    * options misses the property 'additionalCode' | should be any non-object."
`;

exports[`validate options should throw an error on the "unknown" option with "false" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options should be one of these:
   object { imports, … } | object { wrapper, … } | object { additionalCode, … }
   -> Options for imports-loader
   Details:
    * options has an unknown property 'unknown'. These properties are valid:
      object { imports, … } | object { wrapper, … } | object { additionalCode, … }
      -> Options for imports-loader
    * options misses the property 'imports' | should be any non-object.
    * options misses the property 'wrapper' | should be any non-object.
    * options misses the property 'additionalCode' | should be any non-object."
`;

exports[`validate options should throw an error on the "unknown" option with "test" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options should be one of these:
   object { imports, … } | object { wrapper, … } | object { additionalCode, … }
   -> Options for imports-loader
   Details:
    * options has an unknown property 'unknown'. These properties are valid:
      object { imports, … } | object { wrapper, … } | object { additionalCode, … }
      -> Options for imports-loader
    * options misses the property 'imports' | should be any non-object.
    * options misses the property 'wrapper' | should be any non-object.
    * options misses the property 'additionalCode' | should be any non-object."
`;

exports[`validate options should throw an error on the "unknown" option with "true" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options should be one of these:
   object { imports, … } | object { wrapper, … } | object { additionalCode, … }
   -> Options for imports-loader
   Details:
    * options has an unknown property 'unknown'. These properties are valid:
      object { imports, … } | object { wrapper, … } | object { additionalCode, … }
      -> Options for imports-loader
    * options misses the property 'imports' | should be any non-object.
    * options misses the property 'wrapper' | should be any non-object.
    * options misses the property 'additionalCode' | should be any non-object."
`;

exports[`validate options should throw an error on the "wrapper" option with "/test/" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options.wrapper misses the property 'thisArg'. Should be:
   non-empty string"
`;

exports[`validate options should throw an error on the "wrapper" option with "[""]" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options.wrapper should be one of these:
   boolean | non-empty string | object { thisArg, args? }
   -> Closes the module code in a function with a given 'thisArg' and 'args'
   -> Read more at https://webpack.js.org/loaders/imports-loader/#wrapper
   Details:
    * options.wrapper should be a boolean.
    * options.wrapper should be a non-empty string.
    * options.wrapper should be an object:
      object { thisArg, args? }"
`;

exports[`validate options should throw an error on the "wrapper" option with "[]" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options.wrapper should be one of these:
   boolean | non-empty string | object { thisArg, args? }
   -> Closes the module code in a function with a given 'thisArg' and 'args'
   -> Read more at https://webpack.js.org/loaders/imports-loader/#wrapper
   Details:
    * options.wrapper should be a boolean.
    * options.wrapper should be a non-empty string.
    * options.wrapper should be an object:
      object { thisArg, args? }"
`;

exports[`validate options should throw an error on the "wrapper" option with "{"thisArg":"window","args":[1,"bar"]}" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options.wrapper.args[0] should be a non-empty string."
`;

exports[`validate options should throw an error on the "wrapper" option with "{"thisArg":"window","args":true}" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options.wrapper should be one of these:
   boolean | non-empty string | object { thisArg, args? }
   -> Closes the module code in a function with a given 'thisArg' and 'args'
   -> Read more at https://webpack.js.org/loaders/imports-loader/#wrapper
   Details:
    * options.wrapper.args should be one of these:
      [non-empty string, ...] (should not have fewer than 1 item) | object { … }
      Details:
       * options.wrapper.args should be an array:
         [non-empty string, ...] (should not have fewer than 1 item)
       * options.wrapper.args should be an object:
         object { … }"
`;

exports[`validate options should throw an error on the "wrapper" option with "{"thisArg":1}" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options.wrapper.thisArg should be a non-empty string."
`;

exports[`validate options should throw an error on the "wrapper" option with "{"unknown":true}" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options.wrapper should be one of these:
   boolean | non-empty string | object { thisArg, args? }
   -> Closes the module code in a function with a given 'thisArg' and 'args'
   -> Read more at https://webpack.js.org/loaders/imports-loader/#wrapper
   Details:
    * options.wrapper has an unknown property 'unknown'. These properties are valid:
      object { thisArg, args? }
    * options.wrapper misses the property 'thisArg'. Should be:
      non-empty string"
`;

exports[`validate options should throw an error on the "wrapper" option with "{}" value 1`] = `
"Invalid options object. Imports Loader has been initialized using an options object that does not match the API schema.
 - options.wrapper misses the property 'thisArg'. Should be:
   non-empty string"
`;
